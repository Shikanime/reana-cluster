apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "reana-workflow-controller.fullname" . }}
  labels:
{{ include "reana-workflow-controller.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "reana-workflow-controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: job-status-consumer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["flask", "consume-job-queue"]
          volumeMounts:
            - name: reana-shared-volume
              mountPath: {{ .Values.sharedVolumePath }}
          env:
          {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
            - name: REANA_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: reana-db-secrets
                  key: user
            - name: REANA_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reana-db-secrets
                  key: password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: rest-api-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.debug }}
          command: ["/bin/sh","-c"]
          args: ["flask run --host=0.0.0.0"]
          tty: true
          stdin: true
          {{- end }}
          volumeMounts:
            - name: svaccount
              mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
            - name: reana-shared-volume
              mountPath: {{ .Values.sharedVolumePath }}
            {{- range mounts }}
            - name: {{ .name }}
              mountPath: {{ .path | quote }}
            {{- end }}
          ports:
            - containerPort: 5000
              name: http
          env:
            {{- if .Values.url }}
            - name: REANA_URL
              value: {{ .Values.url }}
            {{- end }}
            - name: REANA_DEPLOYMENT_TYPE
              value: {{ .Values.deploymentType }}
            {{- if .Values.cephFS.enabled }}
            - name: REANA_STORAGE_BACKEND
              value: "cephfs"
            {{- end }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: REANA_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: reana-db-secrets
                  key: user
            - name: REANA_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reana-db-secrets
                  key: password
      volumes:
        - name: reana-shared-volume
          {{- if .Value.CephFS.enabled }}
          persistentVolumeClaim:
            claimName: manila-cephfs-pvc
            readOnly: false
          {{- else }}
          hostPath:
            path: {{ .Value.rootPath }}
          {{- end }}
        - name: svaccount
          secret:
            secretName: {{K8S_APISERVER_SECRET}}
        {{- range mounts }}
        - name: {{ .name }}
          {{ .type }}:
            path: {{ .path }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
